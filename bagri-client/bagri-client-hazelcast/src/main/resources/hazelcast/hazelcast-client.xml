<?xml version="1.0" encoding="UTF-8"?>
<hazelcast-client xmlns="http://www.hazelcast.com/schema/client-config" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.hazelcast.com/schema/client-config hazelcast-client-config.xsd">	
	
	<group>
		<name>default</name>
		<password>password</password>
	</group>

	<properties>
		<property name="hazelcast.logging.type">slf4j</property>
		<!--property name="hazelcast.socket.client.buffer.direct">true</property-->
		<!--property name="hazelcast.client.responsequeue.idlestrategy">backoff</property-->
		<!--property name="hazelcast.client.heartbeat.timeout">100</property-->
	</properties>

	<network>
		<cluster-members>
			<address>localhost:10500</address>
		</cluster-members>
		<smart-routing>true</smart-routing>
		<connection-timeout>20000</connection-timeout>
		<connection-attempt-limit>1</connection-attempt-limit>
		<socket-options>
			<buffer-size>48</buffer-size>
		</socket-options>
	</network>

	<executor-pool-size>16</executor-pool-size>

	<!--security>
		<credentials>com.bagri.client.hazelcast.serialize.SecureCredentials</credentials>
	</security-->

	<serialization>
		<data-serializable-factories>
			<!--data-serializable-factory factory-id="1000">com.bagri.client.hazelcast.serialize.DomainSerializationFactory</data-serializable-factory-->
			<data-serializable-factory factory-id="2000">com.bagri.client.hazelcast.serialize.SystemSerializationFactory</data-serializable-factory>
			<data-serializable-factory factory-id="3000">com.bagri.client.hazelcast.serialize.TaskSerializationFactory</data-serializable-factory>
		</data-serializable-factories>
		<portable-factories>
			<portable-factory factory-id="2">com.bagri.client.hazelcast.serialize.PortableFactoryImpl</portable-factory>
		</portable-factories>
		<serializers>
			<!--global-serializer class-name="com.hazelcast.nio.serialization.PortableSerializer"/-->
			<serializer type-class="com.bagri.core.model.Null" class-name="com.bagri.client.hazelcast.serialize.model.NullSerializer"/>
			<serializer type-class="com.bagri.core.model.Element" class-name="com.bagri.client.hazelcast.serialize.model.ElementSerializer"/>
			<serializer type-class="com.bagri.core.model.Elements" class-name="com.bagri.client.hazelcast.serialize.model.ElementsSerializer"/>
			<serializer type-class="com.bagri.core.model.Path" class-name="com.bagri.client.hazelcast.serialize.model.PathSerializer"/>
			<serializer type-class="com.bagri.core.model.Document" class-name="com.bagri.client.hazelcast.serialize.model.DocumentSerializer"/>
			<serializer type-class="com.bagri.core.model.Query" class-name="com.bagri.client.hazelcast.serialize.model.QuerySerializer"/>
			<serializer type-class="com.bagri.core.model.QueryResult" class-name="com.bagri.client.hazelcast.serialize.model.QueryResultSerializer"/>
			<serializer type-class="com.bagri.core.model.IndexedDocument" class-name="com.bagri.client.hazelcast.serialize.model.IndexedDocumentSerializer"/>
			<serializer type-class="com.bagri.core.model.UniqueDocument" class-name="com.bagri.client.hazelcast.serialize.model.UniqueDocumentSerializer"/>
			<serializer type-class="com.bagri.core.model.UniqueValue" class-name="com.bagri.client.hazelcast.serialize.model.UniqueValueSerializer"/>
			<serializer type-class="com.bagri.core.model.Transaction" class-name="com.bagri.client.hazelcast.serialize.model.TransactionSerializer"/>
			<serializer type-class="com.bagri.core.model.FragmentedDocument" class-name="com.bagri.client.hazelcast.serialize.model.FragmentedDocumentSerializer"/>
			<serializer type-class="com.bagri.core.query.Expression" class-name="com.bagri.client.hazelcast.serialize.query.ExpressionSerializer"/>
			<serializer type-class="com.bagri.core.query.AlwaysExpression" class-name="com.bagri.client.hazelcast.serialize.query.ExpressionSerializer"/>
			<serializer type-class="com.bagri.core.query.PathExpression" class-name="com.bagri.client.hazelcast.serialize.query.ExpressionSerializer"/>
			<serializer type-class="com.bagri.core.query.BinaryExpression" class-name="com.bagri.client.hazelcast.serialize.query.ExpressionSerializer"/>
			<serializer type-class="com.bagri.core.query.ExpressionBuilder" class-name="com.bagri.client.hazelcast.serialize.query.ExpressionBuilderSerializer"/>
			<serializer type-class="com.bagri.core.query.ExpressionContainer" class-name="com.bagri.client.hazelcast.serialize.query.ExpressionContainerSerializer"/>
			<serializer type-class="com.bagri.core.query.PathBuilder" class-name="com.bagri.client.hazelcast.serialize.query.PathBuilderSerializer"/>
			<serializer type-class="com.bagri.core.query.QueryBuilder" class-name="com.bagri.client.hazelcast.serialize.query.QueryBuilderSerializer"/>
			<serializer type-class="com.bagri.core.query.QueriedPath" class-name="com.bagri.client.hazelcast.serialize.query.QueriedPathSerializer"/>
			<serializer type-class="com.bagri.core.system.Index" class-name="com.bagri.client.hazelcast.serialize.system.IndexSerializer"/>
			<serializer type-class="com.bagri.core.system.TriggerAction" class-name="com.bagri.client.hazelcast.serialize.system.TriggerActionSerializer"/>
			<serializer type-class="com.bagri.core.system.JavaTrigger" class-name="com.bagri.client.hazelcast.serialize.system.JavaTriggerSerializer"/>
			<serializer type-class="com.bagri.core.system.XQueryTrigger" class-name="com.bagri.client.hazelcast.serialize.system.XQueryTriggerSerializer"/>
		</serializers>
	</serialization>

	<!--load-balancer type="random"></load-balancer-->
	 
</hazelcast-client>
